name: Dev Tabs Release Build

on:
  push:
    branches:
      - dev_tabs

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-2022
    defaults:
      run:
        shell: pwsh
    env:
      OPENSAL_BUILD_DIR: ${{ github.workspace }}\build\
      BUILD_CONFIGURATION: Release
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup MSBuild in PATH (VS2022)
        uses: microsoft/setup-msbuild@v2

      - name: Setup MSVC Developer Command Prompt (x64 toolchain)
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Prepare build directory
        run: |
          New-Item -ItemType Directory -Force -Path $env:OPENSAL_BUILD_DIR | Out-Null

      - name: Build Salamand (Release | Win32)
        run: |
          msbuild .\src\vcxproj\salamand.sln /m /t:Rebuild /p:Configuration=$env:BUILD_CONFIGURATION /p:Platform=Win32 /p:PreferredToolArchitecture=x64 /nr:false /v:m

      - name: Build Salamand (Release | x64)
        run: |
          msbuild .\src\vcxproj\salamand.sln /m /t:Rebuild /p:Configuration=$env:BUILD_CONFIGURATION /p:Platform=x64 /p:PreferredToolArchitecture=x64 /nr:false /v:m

      - name: Create release archive
        run: |
          $artifactRoot = Join-Path $env:OPENSAL_BUILD_DIR 'salamander'
          if (-not (Test-Path $artifactRoot)) {
            throw "Expected build output directory '$artifactRoot' does not exist."
          }

          $zipPath = Join-Path $env:GITHUB_WORKSPACE 'salamand-testing-tabs.zip'
          if (Test-Path $zipPath) {
            Remove-Item $zipPath
          }

          Compress-Archive -Path (Join-Path $artifactRoot '*') -DestinationPath $zipPath -Force

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: salamand-testing-tabs
          path: salamand-testing-tabs.zip
          if-no-files-found: error

      - name: Create prerelease
        id: create_prerelease
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: dev_tabs-${{ github.run_number }}
          release_name: Salamand Testing Tabs Build ${{ github.run_number }}
          draft: false
          prerelease: true
          target_commitish: ${{ github.sha }}

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_prerelease.outputs.upload_url }}
          asset_path: ${{ github.workspace }}\salamand-testing-tabs.zip
          asset_name: salamand-testing-tabs.zip
          asset_content_type: application/zip
